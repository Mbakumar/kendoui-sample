@model IEnumerable<RnD.KendoUISample.Models.Category>
@using RnD.KendoUISample.ViewModels
@{
    ViewBag.Title = "ListView Inner ListView Details";
}
<h2>
    Category List: ListView Inner ListView Details</h2>
<div id="catListViewZone">
    @(Html.Kendo().ListView<LvCategoryViewModel>().Name("CategoryProduct")
           .TagName("div").HtmlAttributes(new { @class = "" })
                   .ClientTemplateId("CategoryProductTmpl")
           .DataSource(dataSource => dataSource
                                         .Read(read => read.Action("CategoryWithProductsRead", "Category"))
           ))
</div>
<br />
<hr />
<div id="catListViewZone2">
    @(Html.Kendo().ListView<LvCategoryViewModel>()
                                      .Name("CategoryProduct2")
                                  .HtmlAttributes(new { @class = "" })
                                          .TagName("div")
                                              .ClientTemplateId("CategoryProductTmpl")
                                  .DataSource(dataSource => dataSource
                                              .Read(read => read.Action("CategoryWithProductsRead", "Category").Data("PassSearchParameter")).PageSize(100)
                                  )
                                  .Pageable(paging => paging.Enabled(true).PageSizes(new int[5] { 5, 10, 20, 40, 50 }))
           .Events(events => events.DataBound("onCategoryDataBound")))
</div>

<script type="text/x-kendo-tmpl" id="CategoryProductTmpl">

    <div class="row">
        <div class="row-col-50">
            ${ (CategoryId == null) ? ' ' : CategoryId}
        </div>
        <div class="row-col-50">
            ${ (CategoryName == null) ? ' ' : CategoryName}
        </div>
    </div>
    <div id="divProduct-${ (CategoryId == null) ? ' ' : CategoryId}" class="row-child">
        #for (var i=0, l = ProductViewModels.length; i < l; i++){#
            <div class="row">
                <div class="row-col-20">
                    ${ (ProductViewModels[i].ProductId == null) ? ' ' : ProductViewModels[i].ProductId}
                </div>
                <div class="row-col-20">
                    ${ (ProductViewModels[i].ProductName == null) ? ' ' : ProductViewModels[i].ProductName}
                </div>
                <div class="row-col-20">
                    ${ (ProductViewModels[i].ProductPrice == null) ? ' ' : ProductViewModels[i].ProductPrice}
                </div>
                <div class="row-col-20">
                    ${ (ProductViewModels[i].CategoryId == null) ? ' ' : ProductViewModels[i].CategoryId}
                </div>
                <div class="row-col-20">
                    ${ (ProductViewModels[i].CategoryName == null) ? ' ' : ProductViewModels[i].CategoryName}
                </div>
            </div>
        # } #

    </div>

</script>
<script type="text/javascript">

    function PassSearchParameter() {

    }

    function onCategoryDataBound(arg) {

    }

</script>
<style>
    .row
    {
        padding: 0px;
        margin: 0px;
        display: inline-table;
        width: 100%;
    }
    .row-col
    {
        width: 30%;
        float: left;
    }
    .row-col-10
    {
        width: 10%;
        float: left;
    }
    .row-col-20
    {
        width: 20%;
        float: left;
    }
    .row-col-25
    {
        width: 25%;
        float: left;
    }
    .row-col-30
    {
        width: 30%;
        float: left;
    }
    .row-col-40
    {
        width: 40%;
        float: left;
    }
    .row-col-50
    {
        width: 50%;
        float: left;
    }
    .row-col-60
    {
        width: 60%;
        float: left;
    }
    .row-col-70
    {
        width: 70%;
        float: left;
    }
    .row-col-80
    {
        width: 80%;
        float: left;
    }
    .row-col-90
    {
        width: 90%;
        float: left;
    }
    .row-col-100
    {
        width: 100%;
        float: left;
    }
    .row-child
    {
        padding: 0px;
        margin: 0px;
        display: inline-table;
        width: 100%;
        border: 1px solid red;
    }
</style>
